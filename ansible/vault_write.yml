- name: Set current key/value facts
  set_fact:
    current_key: "{{ item.key }}"
    current_value: "{{ item.value }}"

# If current_value is a dictionary, append policy once per dictionary
- name: Append policy for dictionary keys
  shell: |
    export VAULT_ADDR="https://{{ ansible_host }}:8200"
    export VAULT_TOKEN="{{ vault_root_token }}"
    cat >> /tmp/mycreds-policy.hcl <<EOF
    
    path "{{ vault_base_path_cli }}/{{ current_key }}/*" {
      capabilities = ["read", "list", "create", "update"]
    }
    path "{{ vault_base_path_api }}/{{ current_key }}/*" {
      capabilities = ["read", "list", "create", "update"]
    }
    path "{{ vault_base_path_api_metadata }}/{{ current_key }}/*" {
      capabilities = ["read", "list", "create", "update"]
    }
    EOF
    vault policy write mycreds-policy /tmp/mycreds-policy.hcl
  when: current_value is mapping
  args:
    executable: /bin/bash
  environment: "{{ vault_env }}"

# Write each key of the dictionary into Vault
- name: Write dictionary values into Vault (one per key)
  loop: "{{ current_value | dict2items if current_value is mapping else [] }}"
  loop_control:
    loop_var: cred_item
  shell: |
    export VAULT_ADDR="https://{{ ansible_host }}:8200"
    export VAULT_TOKEN="{{ vault_root_token }}"
    vault kv put {{ vault_base_path_cli }}/{{ current_key }}/{{ cred_item.key }} value="{{ cred_item.value }}"
  when: current_value is mapping
  args:
    executable: /bin/bash
  environment: "{{ vault_env }}"

# If current_value is not a dictionary, just write a single value
- name: Write single value into Vault
  shell: |
    export VAULT_ADDR="https://{{ ansible_host }}:8200"
    export VAULT_TOKEN="{{ vault_root_token }}"
    vault kv put {{ vault_base_path_cli }}/{{ current_key }} value="{{ current_value }}"
  when: current_value is not mapping
  args:
    executable: /bin/bash
  environment: "{{ vault_env }}"