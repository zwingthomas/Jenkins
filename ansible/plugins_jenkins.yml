---
- name: Setup Jenkins with AWS-CLI v2, Terraform, Docker and plugins
  hosts: jenkins
  become: true

  vars:
    jenkins_home: /var/lib/jenkins
    plugin_cli_version: 2.12.9                       # update as needed
    plugin_cli_jar: /usr/local/bin/jenkins-plugin-cli.jar

    jenkins_plugins:
      # Credentials / Cloud
      - aws-credentials
      - credentials
      - plain-credentials
      - azure-credentials
      - ssh-credentials

      # Pipeline & Workflow
      - workflow-aggregator
      - pipeline-model-definition
      - pipeline-stage-view
      - pipeline-utility-steps
      - workflow-multibranch

      # Container & Cloud
      - docker-plugin
      - kubernetes

      # UI / Blue Ocean
      - blueocean

      # SCM
      - git
      - github
      - bitbucket

      # Notifications / QA
      - slack
      - junit
      - warnings-ng

      # Build tools
      - maven-plugin
      - gradle
      - ansible

      # Security / Access
      - matrix-auth
      - role-strategy
      - script-security

      # Optional extras
      - timestamper
      - ws-cleanup

  pre_tasks:
    # Stop Jenkins (if running) so we can stage plugins offline
    - name: Stop Jenkins before plugin staging
      service:
        name: jenkins
        state: stopped
      failed_when: false

    # Download the Plugin-Installation-Manager CLI once
    - name: Fetch jenkins-plugin-cli
      get_url:
        url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/{{ plugin_cli_version }}/jenkins-plugin-manager-{{ plugin_cli_version }}.jar
        dest: "{{ plugin_cli_jar }}"
        mode: '0755'
      when: not lookup('file', plugin_cli_jar, errors='ignore')

    # Render plugins.txt for the CLI
    - name: Create plugins.txt
      copy:
        dest: /tmp/plugins.txt
        content: |
          {% for p in jenkins_plugins %}
          {{ p }}
          {% endfor %}

    # Resolve the dependency graph and download everything into $JENKINS_HOME/plugins
    - name: Install plugins (deps included) offline
      command: >
        java -jar {{ plugin_cli_jar }}
        --plugin-file /tmp/plugins.txt
        --plugin-download-directory {{ jenkins_home }}/plugins
        --latest true
        --verbose
      args:
        creates: "{{ jenkins_home }}/plugins/{{ jenkins_plugins[0] }}.jpi"

    # Fix ownership
    - name: Ensure correct ownership on plugins dir
      file:
        path: "{{ jenkins_home }}/plugins"
        owner: jenkins
        group: jenkins
        recurse: yes

    # Skip the setup wizard so Jenkins starts unlocked
    - name: Mark setup wizard completed
      copy:
        dest: "{{ jenkins_home }}/jenkins.install.UpgradeWizard.state"
        content: "2.440"
        owner: jenkins
        group: jenkins
        mode: '0644'

  tasks:
    # Start Jenkins once everything is in place
    - name: Start & enable Jenkins
      service:
        name: jenkins
        state: started
        enabled: yes